server:
  port: 10010 # 网关端口
#  forward-headers-strategy: framework
spring:
  application:
    name: "gateway" # 服务名称
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'http://localhost:10020/rsa/publicKey' #配置RSA的公钥访问地址
    redis:
      database: 0
      port: 6379
      host: localhost
      password:
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos地址
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true #使用小写service-id
      routes: # 网关路由配置
#        - id: openapi
#          uri: http://localhost:${server.port}
#          predicates:
#            - Path=/v3/api-docs/**
#          filters:
#            - RewritePath=/v3/api-docs/(?<path>.*),/$\{path}/v3/api-docs
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"# 允许哪些网站的跨域请求 allowedOrigins: “*” 允许所有网站
            allowedMethods: "*" # 允许的跨域ajax的请求方式
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期
      default-filters:
        - DedupeResponseHeader=Vary Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST

springdoc:
  swagger-ui:
    use-root-path: true
    path: scholl
secure:
  ignore:
    urls: #配置白名单路径
      - "/doc.html"
      - "/*/v3/api-docs/**"
      - "/v3/api-docs/**"
      - "/*/*.js"
      - "/*/*.css"
      - "/*/*.png"
      - "/*/*.ico"
      - "/webjars/**"

